---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json

controllers:
  paperless:
    containers:
      app:
        image:
          repository: ghcr.io/paperless-ngx/paperless-ngx
          tag: 2.16.2
        env:
          # Configure application
          PAPERLESS_SECRET_KEY:
            valueFrom:
              secretKeyRef:
                name: paperless-secret
                key: PAPERLESS_SECRET_KEY
          PAPERLESS_URL: https://paperless.devpi.de
          PAPERLESS_PORT: "8000"
          PAPERLESS_TIME_ZONE: "Europe/Berlin"
          PAPERLESS_WEBSERVER_WORKERS: "2"
          PAPERLESS_TASK_WORKERS: "2"
          PAPERLESS_DATA_DIR: /data/local/data
          PAPERLESS_MEDIA_ROOT: /data/local/media
          # Configure OCR
          PAPERLESS_OCR_LANGUAGE: deu+eng
          PAPERLESS_EMAIL_TASK_CRON: "*/2 * * * *"
          PAPERLESS_FILENAME_FORMAT: "{created_year}/{correspondent}/{title}"
          PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
          # Configure redis integration
          PAPERLESS_REDIS: redis://paperless-redis.paperless.svc.cluster.local:6379
          # Configure postgres integration
          PAPERLESS_DBHOST: paperless-postgres.paperless.svc.cluster.local
          PAPERLESS_DBNAME: paperless
          PAPERLESS_DBUSER: paperless
          PAPERLESS_DBPASS:
            valueFrom:
              secretKeyRef:
                name: paperless-secret
                key: PAPERLESS_POSTGRES_PASSWORD
          # Configure admin user
          PAPERLESS_ADMIN_USER:
            valueFrom:
              secretKeyRef:
                name: paperless-secret
                key: PAPERLESS_ADMIN_USER
          PAPERLESS_ADMIN_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: paperless-secret
                key: PAPERLESS_ADMIN_PASSWORD
        probes:
          liveness:
            enabled: true
          readiness:
            enabled: true
          startup:
            enabled: true
            spec:
              initialDelaySeconds: 30
              failureThreshold: 30
              periodSeconds: 5
        resources:
          requests:
            cpu: 25m
            memory: 1Gi
          limits:
            memory: 2Gi

  redis:
    containers:
      redis:
        image:
          repository: docker.io/valkey/valkey
          tag: 8.1.1
        resources:
          requests:
            cpu: 5m
            memory: 32Mi
          limits:
            memory: 128Mi

  postgres:
    containers:
      postgres:
        image:
          repository: docker.io/postgres
          tag: 15.13
        env:
          POSTGRES_DB: paperless
          POSTGRES_USER: paperless
          POSTGRES_PASSWORD:
            valueFrom:
              secretKeyRef:
                name: paperless-secret
                key: PAPERLESS_POSTGRES_PASSWORD
        resources:
          requests:
            cpu: 10m
            memory: 128Mi
          limits:
            memory: 512Mi

service:
  app:
    controller: paperless
    ports:
      http:
        port: 8000
  redis:
    controller: redis
    ports:
      http:
        port: 6379
  postgres:
    controller: postgres
    ports:
      http:
        port: 5432

route:
  app:
    parentRefs:
      - name: web-internal
        namespace: cilium
        sectionName: https
    hostnames:
      - paperless.devpi.de
    rules:
      - backendRefs:
          - port: 8000
            name: paperless-app
        matches:
          - path:
              type: PathPrefix
              value: /

persistence:
  data:
    existingClaim: paperless-data-b
    advancedMounts:
      paperless:
        app:
          - path: /data/local
  db:
    existingClaim: paperless-db-b
    advancedMounts:
      postgres:
        postgres:
          - path: /var/lib/postgresql/data
