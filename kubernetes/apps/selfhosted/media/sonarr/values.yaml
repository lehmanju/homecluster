controllers:
  sonarr:
    containers:
      app:
        image:
          repository: ghcr.io/home-operations/sonarr
          tag: 4.0.14.2938@sha256:5126f7ae94745a8e58e6963e1f67e905766c096832eff08b0678355ad0cdecee
        env:
          SONARR__APP__INSTANCENAME: Sonarr
          SONARR__APP__THEME: dark
          SONARR__AUTH__METHOD: External
          SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
          SONARR__LOG__DBENABLED: "False"
          SONARR__LOG__LEVEL: info
          SONARR__SERVER__PORT: &port 80
          SONARR__UPDATE__BRANCH: develop
          TZ: Europe/Berlin
        envFrom:
          - secretRef:
              name: sonarr-secret
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /ping
                port: *port
              initialDelaySeconds: 0
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2Gi
defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: OnRootMismatch
service:
  app:
    controller: sonarr
    ports:
      http:
        port: *port
route:
  app:
    hostnames: ["sonarr.devpi.de"]
    parentRefs:
      - name: web-internal
        namespace: cilium
        sectionName: https
    rules:
      - backendRefs:
          - identifier: app
            port: *port
persistence:
  config:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: longhorn-backup
  config-cache:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 5Gi
    globalMounts:
      - path: /config/MediaCover
  media:
    existingClaim: media
    globalMounts:
      - path: /media
  tmp:
    type: emptyDir
